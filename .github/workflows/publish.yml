name: "publish"

on:
  push:
    tags:
      - v*

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev build-essential curl wget libssl-dev libgtk-3-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install pnpm
        run: npm install -g pnpm
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "pnpm"

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install wasm target
        run: rustup target add wasm32-unknown-unknown

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: Install cargo-binstall
        run: cargo install cargo-binstall

      - name: Dioxus
        run: cargo binstall dioxus-cli

      - name: Install sqlx-cli
        run: cargo binstall sqlx-cli

      - name: Create database
        run: sqlx database create
      - name: Migrate database
        run: sqlx migrate run

      - name: Build & Publish
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: v__VERSION__
          releaseName: v__VERSION__
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false

      - run: mkdir public && mv latest.json public/white-hole-latest.json
      - name: Deploy update
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          keep_files: true
